# preprocessor_config.yaml

# List of supported model types
model_types:
  - "Tree Based Classifier"
  - "Logistic Regression"
  - "K-Means"
  - "Linear Regression"
  - "Tree Based Regressor"
  - "Support Vector Machine"
  - "Time Series"        # Added for clarity and for LSTM models

# List of supported model sub-types for each model type
model_sub_types:
  Tree Based Classifier:
    - "Random Forest"
    - "XGBoost"
    - "Decision Tree"
  Logistic Regression:
    - "Logistic Regression"
  K-Means:
    - "K-Means"
  Linear Regression:
    - "Linear Regression"
  Tree Based Regressor:
    - "Random Forest Regressor"
    - "XGBoost Regressor"
    - "Decision Tree Regressor"
  Support Vector Machine:
    - "Support Vector Machine"
  Time Series:
    - "LSTM"             # You can add additional time series model subtypes here

# Updated feature lists for the new dataset.
# Note: The "frame_time" column is not included here because it is automatically
# appended for time series models.
features:
  ordinal_categoricals: []
  nominal_categoricals: 
    - shooting_motion
    - trial_id
  numericals:
    # These are example numerical features from your updated dataset.
    - landing_x
    - landing_y
    - entry_angle
    - ball_x
    - ball_y
    - ball_z
    - R_EYE_x
    - R_EYE_y
    - R_EYE_z
    - L_EYE_x
    - L_EYE_y
    - L_EYE_z
    - NOSE_x
    - NOSE_y
    - NOSE_z
    - R_SHOULDER_x
    - R_SHOULDER_y
    - R_SHOULDER_z
    - L_SHOULDER_x
    - L_SHOULDER_y
    - L_SHOULDER_z
    # ... add additional columns as needed from your updated dataset.
  y_variable:
    - result

paths:
  # Base directories
  data_dir: "../../dataset/test/data"
  raw_data: "final_granular_dataset.csv"
  processed_data_dir: "preprocessor/processed"
  features_metadata_file: "features_info/features_metadata.pkl"
  predictions_output_dir: "preprocessor/predictions"
  config_file: "../../dataset/test/preprocessor_config/preprocessor_config.yaml"
  
  # Output directories
  log_dir: "../preprocessor/logs"
  model_save_base_dir: "../preprocessor/models"
  transformers_save_base_dir: "../preprocessor/transformers"
  plots_output_dir: "../preprocessor/plots"
  training_output_dir: "../preprocessor/training_output"

models:
  Tree Based Classifier:
    split_dataset:
      test_size: 0.2
      random_state: 42
      stratify_for_classification: true
    handle_missing_values:
      numerical_strategy:
        strategy: median
        imputer: SimpleImputer
      categorical_strategy:
        strategy: most_frequent
        imputer: SimpleImputer
        fill_value: "Missing"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: false
      apply_iqr: true
      apply_winsor: false
      winsor_limits: [0.05, 0.05]
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: power
      power_method: yeo-johnson
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OneHotEncoder
      handle_unknown: ignore
    apply_scaling:
      method: StandardScaler
    implement_smote:
      variant: SMOTENC
      params:
        k_neighbors: 5
        sampling_strategy: 'auto'
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: true
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

  Logistic Regression:
    split_dataset:
      test_size: 0.2
      random_state: 42
      stratify_for_classification: true
    handle_missing_values:
      numerical_strategy:
        strategy: mean
        imputer: SimpleImputer
      categorical_strategy:
        strategy: most_frequent
        imputer: SimpleImputer
        fill_value: "Missing"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: false
      apply_iqr: true
      apply_winsor: false
      winsor_limits: [0.05, 0.05]
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: power
      power_method: yeo-johnson
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OneHotEncoder
      handle_unknown: ignore
    apply_scaling:
      method: StandardScaler
    implement_smote:
      variant: SMOTENC
      params:
        k_neighbors: 5
        sampling_strategy: 'auto'
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: true
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

  K-Means:
    split_dataset:
      test_size: null
      random_state: 42
      stratify_for_classification: false
    handle_missing_values:
      numerical_strategy:
        strategy: mean
        imputer: SimpleImputer
      categorical_strategy:
        strategy: most_frequent
        imputer: SimpleImputer
        fill_value: "Missing"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: true
      apply_iqr: true
      apply_winsor: false
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: power
      power_method: yeo-johnson
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OrdinalEncoder
      handle_unknown: ignore
    apply_scaling:
      method: MinMaxScaler
    implement_smote:
      variant: null
      params: {}
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    clustering_model_params:
      n_clusters: 3
      init: 'k-means++'
      n_init: 10
      max_iter: 300
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: false
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

  Linear Regression:
    split_dataset:
      test_size: 0.2
      random_state: 42
      stratify_for_classification: false
    handle_missing_values:
      numerical_strategy:
        strategy: mean
        imputer: SimpleImputer
      categorical_strategy:
        strategy: most_frequent
        imputer: SimpleImputer
        fill_value: "Missing"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: true
      apply_iqr: true
      apply_winsor: false
      winsor_limits: [0.05, 0.05]
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: power
      power_method: yeo-johnson
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OneHotEncoder
      handle_unknown: ignore
    apply_scaling:
      method: StandardScaler
    implement_smote:
      variant: null
      params: {}
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: false
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

  Tree Based Regressor:
    split_dataset:
      test_size: 0.2
      random_state: 42
      stratify_for_classification: false
    handle_missing_values:
      numerical_strategy:
        strategy: median
        imputer: SimpleImputer
      categorical_strategy:
        strategy: most_frequent
        imputer: SimpleImputer
        fill_value: "Missing"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: false
      apply_iqr: true
      apply_winsor: false
      winsor_limits: [0.05, 0.05]
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: none
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OneHotEncoder
      handle_unknown: ignore
    apply_scaling:
      method: none
    implement_smote:
      variant: null
      params: {}
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: false
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

  Support Vector Machine:
    split_dataset:
      test_size: 0.2
      random_state: 42
      stratify_for_classification: true
    handle_missing_values:
      numerical_strategy:
        strategy: mean
        imputer: KNNImputer
        knn_neighbors: 5
      categorical_strategy:
        strategy: constant
        imputer: SimpleImputer
        fill_value: "Unknown"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: false
      apply_iqr: true
      apply_winsor: false
      winsor_limits: [0.05, 0.05]
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: power
      power_method: yeo-johnson
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OneHotEncoder
      handle_unknown: ignore
    apply_scaling:
      method: StandardScaler
    implement_smote:
      variant: SMOTENC
      params:
        k_neighbors: 5
        sampling_strategy: 'auto'
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: true
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

# --- New time series section for LSTM models ---
time_series:
  enabled: true
  time_column: "frame_time"         # This must match the column name in the updated dataset.
  window_size: 30                   # Default sequence length (can be dynamically estimated if needed)
  horizon: 1                        # Number of future time steps to predict.
  step_size: 1                      # Stride for the sliding window.
  max_sequence_length: 30           # Optional: pad sequences to this length if needed.
  use_dtw: false                    # Set to true to enable DTW alignment.
